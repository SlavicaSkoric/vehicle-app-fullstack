{"version":3,"sources":["Components/ColumnFilter.js","Components/columns.js","Components/GlobalFilter.js","Components/EntryEditor.js","Components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["ColumnFilter","column","filterValue","setFilter","value","onChange","e","target","COLUMNS","Header","Footer","accessor","GlobalFilter","filter","className","EntryEditor","useState","vehicleMake","vehicleModel","vehicleModelYear","vehicleColor","input","setInput","handleChange","event","name","prevInput","autoComplete","placeholder","onClick","newVehicle","axios","post","alert","Table","vehiclesData","setVehiclesData","fetchVehiclesData","a","get","catch","err","console","log","response","vehicles","data","columns","useMemo","defaultColumn","Filter","useTable","useFilters","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","footerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","prepareRow","state","setGlobalFilter","globalFilter","pageIndex","pageSize","useEffect","src","alt","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps","length","type","defaultValue","pageNumber","Number","style","width","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f187e608.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ColumnFilter = ({ column }) => {\n  const { filterValue, setFilter } = column;\n  return (\n    <span>\n      Search:{' '}\n      <input\n        value={filterValue || ''}\n        onChange={(e) => setFilter(e.target.value)}\n      />\n    </span>\n  );\n};\n","export const COLUMNS = [\n  {\n    Header: 'Vehicle Make',\n    Footer: 'Vehicle Make',\n    accessor: 'vehicleMake',\n  },\n  {\n    Header: 'Vehicle Model',\n    Footer: 'Vehicle Model',\n    accessor: 'vehicleModel',\n  },\n  {\n    Header: 'Vehicle Model Year',\n    Footer: 'Vehicle Model Year',\n    accessor: 'vehicleModelYear',\n  },\n  {\n    Header: 'Vehicle Color',\n    Footer: 'Vehicle Color',\n    accessor: 'vehicleColor',\n  },\n];\n","import React from 'react';\n\nexport const GlobalFilter = ({ filter, setFilter }) => {\n  return (\n    <div className='m-4'>\n      <div>Search: </div>\n      <input value={filter || ''} onChange={(e) => setFilter(e.target.value)} />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction EntryEditor() {\n  const [input, setInput] = useState({\n    vehicleMake: '',\n    vehicleModel: '',\n    vehicleModelYear: '',\n    vehicleColor: '',\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setInput((prevInput) => {\n      return {\n        ...prevInput,\n        [name]: value,\n      };\n    });\n  }\n\n  function handleClick() {\n    const newVehicle = {\n      vehicleMake: input.vehicleMake,\n      vehicleModel: input.vehicleModel,\n      vehicleModelYear: input.vehicleModelYear,\n      vehicleColor: input.vehicleColor,\n    };\n\n    // heroku fix\n    axios.post('https://vehicle-app-fullstack.herokuapp.com', newVehicle);\n    // hardcoded\n    // axios.post('http://localhost:3001', newVehicle);\n\n    alert('You have successfully added the vehicle!');\n  }\n\n  return (\n    <div className='container bg-warning p-5 my-5'>\n      <h1 className='my-5'>Vehicle Entry Editor</h1>\n      <form>\n        <h5>Vehicle Make</h5>\n        <div className='form-group my-4'>\n          <input\n            onChange={handleChange}\n            name='vehicleMake'\n            value={input.vehicleMake}\n            autoComplete='off'\n            className='form-control'\n            placeholder='Vehicle Make'\n          ></input>\n        </div>\n        <h5>Vehicle Model</h5>\n        <div className='form-group my-4'>\n          <input\n            onChange={handleChange}\n            name='vehicleModel'\n            value={input.vehicleModel}\n            autoComplete='off'\n            className='form-control'\n            placeholder='Vehicle Model'\n          ></input>\n        </div>\n        <h5>Vehicle Model Year</h5>\n        <div className='form-group my-4'>\n          <input\n            onChange={handleChange}\n            name='vehicleModelYear'\n            value={input.vehicleModelYear}\n            autoComplete='off'\n            className='form-control'\n            placeholder='Vehicle Model Year'\n          ></input>\n        </div>\n        <h5>Vehicle Color</h5>\n        <div className='form-group my-4'>\n          <input\n            onChange={handleChange}\n            name='vehicleColor'\n            value={input.vehicleColor}\n            autoComplete='off'\n            className='form-control'\n            placeholder='Vehicle Color'\n          ></input>\n        </div>\n        <button onClick={handleClick} className='btn btn-lg btn-success mt-5'>\n          ADD VEHICLE\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default EntryEditor;\n","import React, { useMemo, useEffect, useState } from 'react';\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  useFilters,\n  usePagination,\n} from 'react-table';\n// Below is the import for the first draft static DB.\n// import vehicles from '../Common/vehicles.json';\nimport { ColumnFilter } from './ColumnFilter';\nimport { COLUMNS } from './columns';\nimport { GlobalFilter } from './GlobalFilter';\nimport './table.css';\nimport EntryEditor from './EntryEditor';\nimport axios from 'axios';\n\n// Table created with React Table.\n\nexport const Table = () => {\n  // Fetching data from MongoDB Atlas.\n\n  const [vehiclesData, setVehiclesData] = useState([]);\n\n  const fetchVehiclesData = async () => {\n    const response = await axios\n      // heroku fix\n      .get('https://vehicle-app-fullstack.herokuapp.com/vehicles')\n      // hardcoded\n      // .get('http://localhost:3001')\n      .catch((err) => console.log(err));\n\n    if (response) {\n      const vehicles = response.data;\n\n      console.log('Vehicles: ', vehicles);\n      setVehiclesData(vehicles);\n    }\n  };\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => [...vehiclesData], [vehiclesData]);\n\n  const defaultColumn = useMemo(() => {\n    return {\n      Filter: ColumnFilter,\n    };\n  }, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  useEffect(() => {\n    fetchVehiclesData();\n  }, []);\n\n  return (\n    <>\n      <h1 className='my-4'>Vehicle App Mono</h1>\n      <img\n        src='https://cdn-icons-png.flaticon.com/512/3774/3774278.png'\n        alt=''\n        className='w-25'\n      />\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <div>\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? ' 🔼'\n                          : ' 🔽'\n                        : ' 🔽🔼'}\n                    </span>\n                  </div>\n                  {/* <div>{column.canFilter ? column.render('Filter') : null}</div> */}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          {footerGroups.map((footerGroup) => (\n            <tr {...footerGroup.getFooterGroupProps()}>\n              {footerGroup.headers.map((column) => (\n                <td {...column.getFooterProps}>{column.render('Footer')}</td>\n              ))}\n            </tr>\n          ))}\n        </tfoot>\n      </table>\n      <div className='m-4'>\n        <div>\n          <span>\n            Page{' '}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{' '}\n          </span>\n          <span>\n            | Go to page:{' '}\n            <input\n              type='number'\n              defaultValue={pageIndex + 1}\n              onChange={(e) => {\n                const pageNumber = e.target.value\n                  ? Number(e.target.value) - 1\n                  : 0;\n                gotoPage(pageNumber);\n              }}\n              style={{ width: '50px' }}\n            />\n          </span>\n        </div>\n        <div className='m-4'>\n          <select\n            value={pageSize}\n            onChange={(e) => setPageSize(Number(e.target.value))}\n          >\n            {[10, 25, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className='m-4'>\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {'<<'}\n          </button>\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            Previous\n          </button>\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            Next\n          </button>\n          <button\n            onClick={() => gotoPage(pageCount - 1)}\n            disabled={!canNextPage}\n          >\n            {'>>'}\n          </button>\n        </div>\n      </div>\n      <EntryEditor />\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Table } from './Components/Table';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}